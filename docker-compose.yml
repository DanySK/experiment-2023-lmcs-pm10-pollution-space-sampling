version: '3'
services:

  prepare:
    image: alpine:3.17.1
    volumes:
      - .:/experiment:rw
      - ./scripts:/scripts:rw
    entrypoint: /bin/sh -c
    command: /scripts/create-folders.sh

  recreate-dataset:
    depends_on:
      prepare:
        condition: service_completed_successfully
    profiles:
      - create-data
    image: danysk/${PROJECT_NAME:-unknown}-create-dataset:${VERSION:-latest}
    build:
      dockerfile: ./docker/preprocess/Dockerfile
      context: .
    volumes:
      - ./PM10-data:/experiment/PM10-data
    command:
      - |
        /experiment/refine-locations.main.kts
        /experiment/download-all-PMD10-data.main.kts
        /experiment/cleanup-PMD10-data.main.kts
        mv /experiment/data-summary.json.zstd /experiment/PM10-summary/data-summary.json.zstd

  download-dataset:
    depends_on:
      prepare:
        condition: service_completed_successfully
    image: danysk/${PROJECT_NAME:-unknown}-download-dataset:${VERSION:-latest}
    build:
        dockerfile: ./docker/download/Dockerfile
        context: .
    volumes:
      - ./PM10-summary:/output:rw

  decompress-dataset:
    depends_on:
      download-dataset:
        condition: service_completed_successfully
    image: danysk/zstd:1.5.2
    volumes:
      - ./PM10-summary:/output:rw
    command: '[ -e "/output/data-summary.json" ] || unzstd "/output/data-summary.json.zstd"'

  reduce-dataset:
    depends_on:
      decompress-dataset:
        condition: service_completed_successfully
    image: alpine:3.17.1
    volumes:
      - ./PM10-summary:/PM10-summary:rw
#    command: >-
#      echo "ciao $CI --" && [ -z "$CI" ] && echo "$(head -n2 /PM10-summary/data-summary.json | rev | cut -c100- | rev)\n]" >> /PM10-summary/test.json
    command:
      - sh
      - '-c'
      - |
        [ -z "$CI" ] && head -n2 /PM10-summary/data-summary.json | awk '{print substr($0,0,length($0)-1)"\n]"}' > /PM10-summary/test.json

  start-db:
    image: mongo:6.0
    ports:
      - "27017:27017"

  populate-db:
    depends_on:
      start-db:
        condition: service_started
    image: mongo:6.0
    network_mode: host
    restart: "no"
    volumes:
      - ./PM10-summary:/PM10-summary
    command: /usr/bin/mongoimport --type json --collection pm10 --jsonArray --file /PM10-summary/data-summary.json

  simulation:
    depends_on:
      prepare:
        condition: service_completed_successfully
      populate-db:
        condition: service_completed_successfully
      start-db:
        condition: service_started
      download-dataset:
        condition: service_completed_successfully
    image: danysk/${PROJECT_NAME:-unknown}-simulation:${VERSION:-latest}
    build:
      dockerfile: ./docker/sim/Dockerfile
      context: .
    volumes:
     - ./PM10-summary:/experiment/PM10-summary:rw

  charts:
    depends_on:
      prepare:
        condition: service_completed_successfully
      simulation:
        condition: service_completed_successfully
    image: danysk/${PROJECT_NAME:-unknown}-charts:${VERSION:-latest}
    build:
      dockerfile: ./docker/charts/Dockerfile
      context: .
    volumes:
      - ./data:/experiment/data
      - ./charts:/experiment/charts

  finish:
    depends_on:
      charts:
        condition: service_completed_successfully
    image: alpine:3.17.1
    volumes:
      - .:/experiment:rw
    entrypoint: /bin/sh -c
    command:
      - |
        find /experiment/data -type d -exec chmod 777 {} \;
        find /experiment/charts -type d -exec chmod 777 {} \;
        find /experiment/data -type f -exec chmod 666 {} \;
        find /experiment/charts -type f -exec chmod 666 {} \;
